Padmini Documentation
=====================

**Padmini** is a Python library that generates Sanskrit words with their
traditional derivations (prakriyā) in pāṇinīya-vyākaraṇa. The project aims to
be:

1. *correct*. If a Sanskrit word is valid, Padmini should generate it. If a
   Sanskrit word is not valid, Padmini must not generate it. 

2. *conformant*. Any prakriyā that Padmini generates should conform to the
   tradition. Ideally, there should be little sign that a prakriyā was
   generated by a computer.

3. *clean and readable*. The source code should be accessible to all, and the
   project should be welcome to all contributors.

4. *fast*. Fast code is easier to run, test, and safely modify.

As of today, Padmini can replace SanskritVerb_ for most use cases, but we have
a few small bugs to clean up. We hope to expand Padmini to all of the
Ashtadhyayi's word types in time.

.. note::
   We are currently focusing on tiṅantas and subantas. Once this effort is
   complete, we will focus on kr̥dantas. (Last updated 25 February, 2022)

.. important::
   All data handled by Padmini is encoded in the SLP1 format. For details, see
   the :doc:`slp1-transliteration` page.

.. _SanskritVerb: https://github.com/drdhaval2785/SanskritVerb
.. _SLP1: https://www.sanskrit-lexicon.uni-koeln.de/talkMay2008/SLP1.pdf


User's Guide
============

.. toctree::

   introduction
   setup
   quickstart
   system-design
   reading-the-code



API Reference
=============

.. toctree::
   core-api
   prakarana-api


Appendices
==========

.. toctree::
   slp1-transliteration
   prior-work
